################################################################################
# Adaptado para YOLOv3
################################################################################

infer_config {
  unique_id: 5
  gpu_ids: [0]
  max_batch_size: 4
  backend {
    trt_is {
      model_name: "yolov3"  # Nombre del modelo actualizado a YOLOv3
      version: -1
      model_repo {
        root: "/opt/nvidia/deepstream/deepstream-6.4/sources/objectDetector_Yolo"  # Ruta actualizada al directorio de YOLO
        log_level: 2
        tf_gpu_memory_fraction: 0.4
        tf_disable_soft_placement: 0
      }
    }
  }

  preprocess {
    network_format: IMAGE_FORMAT_RGB
    tensor_order: TENSOR_ORDER_NONE
    maintain_aspect_ratio: 1  # YOLOv3 generalmente mantiene la relación de aspecto
    normalize {
      scale_factor: 0.003921568627  # 1/255 para normalizar los valores de los pixeles a [0,1]
      channel_offsets: [0, 0, 0]
    }
  }

  postprocess {
    labelfile_path: "/opt/nvidia/deepstream/deepstream-6.4/sources/objectDetector_Yolo/labels.txt"  # Ruta actualizada a la ubicación correcta
    detection {
      num_detected_classes: 80  # Número de clases para COCO en YOLOv3
      custom_parse_bbox_func: "NvDsInferParseCustomYolo"  # Función personalizada para el análisis de YOLOv3
      nms {
        confidence_threshold: 0.5
        iou_threshold: 0.3
        topk : 20
      }
    }
  }

  extra {
    copy_input_to_host_buffers: false
  }

  custom_lib {
    path: "/opt/nvidia/deepstream/deepstream/lib/libnvds_infercustomparser.so"  # Asegúrate de que esta ruta sea correcta para YOLOv3
  }
}
input_control {
  process_mode: PROCESS_MODE_FULL_FRAME
  interval: 0
}
output_control {
  output_tensor_meta: true
}
